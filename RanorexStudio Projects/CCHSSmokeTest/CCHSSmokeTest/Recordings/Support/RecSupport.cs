///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Support
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RecSupport recording.
    /// </summary>
    [TestModule("b7867400-1bea-4157-9a1c-9d67e252bdf8", ModuleType.Recording, 1)]
    public partial class RecSupport : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static RecSupport instance = new RecSupport();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RecSupport()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RecSupport Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ImagesObject' at 8;5.", repo.ImagesObjectInfo, new RecordItemIndex(0));
            repo.ImagesObject.Click(new Location(ImagesObject_ImgSupport, "8;5", ImagesObject_ImgSupport_Options));
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ImagesObject' at Center.", repo.ImagesObjectInfo, new RecordItemIndex(2));
            repo.ImagesObject.Click(new Location(ImagesObject_ImgFaq, "Center", ImagesObject_ImgFaq_Options));
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.HowDoIGetStarted'.", repo.NewOceanAdminPortal.HowDoIGetStartedInfo, new RecordItemIndex(3));
                Validate.Exists(repo.NewOceanAdminPortal.HowDoIGetStartedInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.NavNavTabs.MemberManagement' at 85;19.", repo.NewOceanAdminPortal.NavNavTabs.MemberManagementInfo, new RecordItemIndex(4));
                repo.NewOceanAdminPortal.NavNavTabs.MemberManagement.Click("85;19");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.HowDoIEnterANewMember'.", repo.NewOceanAdminPortal.HowDoIEnterANewMemberInfo, new RecordItemIndex(5));
                Validate.Exists(repo.NewOceanAdminPortal.HowDoIEnterANewMemberInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.NavNavTabs.MemberCarePlan' at 86;16.", repo.NewOceanAdminPortal.NavNavTabs.MemberCarePlanInfo, new RecordItemIndex(6));
                repo.NewOceanAdminPortal.NavNavTabs.MemberCarePlan.Click("86;16");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.HowDoICustomizeACarePlanForAMem'.", repo.NewOceanAdminPortal.HowDoICustomizeACarePlanForAMemInfo, new RecordItemIndex(7));
                Validate.Exists(repo.NewOceanAdminPortal.HowDoICustomizeACarePlanForAMemInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.NavNavTabs.CarePlansAndActivities' at 82;18.", repo.NewOceanAdminPortal.NavNavTabs.CarePlansAndActivitiesInfo, new RecordItemIndex(8));
                repo.NewOceanAdminPortal.NavNavTabs.CarePlansAndActivities.Click("82;18");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.HowDoICreateACarePlan'.", repo.NewOceanAdminPortal.HowDoICreateACarePlanInfo, new RecordItemIndex(9));
                Validate.Exists(repo.NewOceanAdminPortal.HowDoICreateACarePlanInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.NavNavTabs.MemberMobileApplications' at 86;20.", repo.NewOceanAdminPortal.NavNavTabs.MemberMobileApplicationsInfo, new RecordItemIndex(10));
                repo.NewOceanAdminPortal.NavNavTabs.MemberMobileApplications.Click("86;20");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.ActivitiesWhatIsAnActivity'.", repo.NewOceanAdminPortal.ActivitiesWhatIsAnActivityInfo, new RecordItemIndex(11));
                Validate.Exists(repo.NewOceanAdminPortal.ActivitiesWhatIsAnActivityInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ImagesObject' at Center.", repo.ImagesObjectInfo, new RecordItemIndex(12));
            repo.ImagesObject.Click(new Location(ImagesObject_ImgContactUs, "Center", ImagesObject_ImgContactUs_Options));
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.Home.ContentHeader'.", repo.NewOceanAdminPortal.Home.ContentHeaderInfo, new RecordItemIndex(13));
                Validate.Exists(repo.NewOceanAdminPortal.Home.ContentHeaderInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
        }

#region Image Feature Data
        CompressedImage ImagesObject_ImgSupport
        { get { return repo.ImagesObjectInfo.GetImgSupport(new Rectangle(27, 6, 22, 10)); } }

        Imaging.FindOptions ImagesObject_ImgSupport_Options
        { get { return Imaging.FindOptions.Parse("0.8;None;0,0,0,0;True;10000000;0ms"); } }

        CompressedImage ImagesObject_ImgFaq
        { get { return repo.ImagesObjectInfo.GetImgFaq(new Rectangle(31, 14, 26, 12)); } }

        Imaging.FindOptions ImagesObject_ImgFaq_Options
        { get { return Imaging.FindOptions.Parse("0.8;None;0,0,0,0;True;10000000;10000ms"); } }

        CompressedImage ImagesObject_ImgContactUs
        { get { return repo.ImagesObjectInfo.GetImgContactUs(new Rectangle(32, 17, 45, 10)); } }

        Imaging.FindOptions ImagesObject_ImgContactUs_Options
        { get { return Imaging.FindOptions.Parse("0.8;None;0,0,0,0;True;10000000;0ms"); } }

#endregion
    }
#pragma warning restore 0436
}
