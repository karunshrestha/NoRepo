///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Reset_Password
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ChangePassword recording.
    /// </summary>
    [TestModule("1f8b880f-928f-436e-aded-c7fdcff59dcd", ModuleType.Recording, 1)]
    public partial class ChangePassword : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static ChangePassword instance = new ChangePassword();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ChangePassword()
        {
            LoginEmail = "shresthakarun@yahoo.com";
            OldPassword = "Password1";
            NewPassword = "Password1";
            ConfirmNewPassword = "Password1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ChangePassword Instance
        {
            get { return instance; }
        }

#region Variables

        string _LoginEmail;

        /// <summary>
        /// Gets or sets the value of variable LoginEmail.
        /// </summary>
        [TestVariable("f2a53bd3-eaf7-4c1d-bca9-c87f48710f4c")]
        public string LoginEmail
        {
            get { return _LoginEmail; }
            set { _LoginEmail = value; }
        }

        string _OldPassword;

        /// <summary>
        /// Gets or sets the value of variable OldPassword.
        /// </summary>
        [TestVariable("472baa85-f453-4b04-acb6-5a5ff740ac8b")]
        public string OldPassword
        {
            get { return _OldPassword; }
            set { _OldPassword = value; }
        }

        string _NewPassword;

        /// <summary>
        /// Gets or sets the value of variable NewPassword.
        /// </summary>
        [TestVariable("c0d4df63-c650-402d-a686-af43c094caf3")]
        public string NewPassword
        {
            get { return _NewPassword; }
            set { _NewPassword = value; }
        }

        string _ConfirmNewPassword;

        /// <summary>
        /// Gets or sets the value of variable ConfirmNewPassword.
        /// </summary>
        [TestVariable("d6558cdf-da05-4015-96c2-25292e20948b")]
        public string ConfirmNewPassword
        {
            get { return _ConfirmNewPassword; }
            set { _ConfirmNewPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Reset_Password.ChangePassBtn' at 71;20.", repo.NewOceanAdminPortal.Reset_Password.ChangePassBtnInfo, new RecordItemIndex(0));
            repo.NewOceanAdminPortal.Reset_Password.ChangePassBtn.Click("71;20");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(1));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Login.Email' at 28;18.", repo.NewOceanAdminPortal.Login.EmailInfo, new RecordItemIndex(2));
            repo.NewOceanAdminPortal.Login.Email.Click("28;18");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LoginEmail' with focus on 'NewOceanAdminPortal.Login.Email'.", repo.NewOceanAdminPortal.Login.EmailInfo, new RecordItemIndex(3));
            repo.NewOceanAdminPortal.Login.Email.PressKeys(LoginEmail);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse XButton2 Click item 'NewOceanAdminPortal.Reset_Password.OldPassword' at 30;18.", repo.NewOceanAdminPortal.Reset_Password.OldPasswordInfo, new RecordItemIndex(4));
            repo.NewOceanAdminPortal.Reset_Password.OldPassword.Click(System.Windows.Forms.MouseButtons.XButton2, "30;18");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OldPassword' with focus on 'NewOceanAdminPortal.Reset_Password.OldPassword'.", repo.NewOceanAdminPortal.Reset_Password.OldPasswordInfo, new RecordItemIndex(5));
            repo.NewOceanAdminPortal.Reset_Password.OldPassword.PressKeys(OldPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse XButton1 Click item 'NewOceanAdminPortal.Reset_Password.NewPassword' at 72;12.", repo.NewOceanAdminPortal.Reset_Password.NewPasswordInfo, new RecordItemIndex(6));
            repo.NewOceanAdminPortal.Reset_Password.NewPassword.Click(System.Windows.Forms.MouseButtons.XButton1, "72;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewPassword' with focus on 'NewOceanAdminPortal.Reset_Password.NewPassword'.", repo.NewOceanAdminPortal.Reset_Password.NewPasswordInfo, new RecordItemIndex(7));
            repo.NewOceanAdminPortal.Reset_Password.NewPassword.PressKeys(NewPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Reset_Password.ConfirmNewPassword' at 64;23.", repo.NewOceanAdminPortal.Reset_Password.ConfirmNewPasswordInfo, new RecordItemIndex(8));
            repo.NewOceanAdminPortal.Reset_Password.ConfirmNewPassword.Click("64;23");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConfirmNewPassword' with focus on 'NewOceanAdminPortal.Reset_Password.ConfirmNewPassword'.", repo.NewOceanAdminPortal.Reset_Password.ConfirmNewPasswordInfo, new RecordItemIndex(9));
            repo.NewOceanAdminPortal.Reset_Password.ConfirmNewPassword.PressKeys(ConfirmNewPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Login.ContinueButton' at 177;16.", repo.NewOceanAdminPortal.Login.ContinueButtonInfo, new RecordItemIndex(10));
            repo.NewOceanAdminPortal.Login.ContinueButton.Click("177;16");
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText=' Your password has been successfully changed.') on item 'NewOceanAdminPortal.Reset_Password.DivTagYourPasswordHasBeenSuccessful'.", repo.NewOceanAdminPortal.Reset_Password.DivTagYourPasswordHasBeenSuccessfulInfo, new RecordItemIndex(11));
                Validate.Attribute(repo.NewOceanAdminPortal.Reset_Password.DivTagYourPasswordHasBeenSuccessfulInfo, "InnerText", " Your password has been successfully changed.", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
