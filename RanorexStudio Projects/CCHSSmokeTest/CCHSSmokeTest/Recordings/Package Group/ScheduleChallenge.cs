///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Package_Group
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ScheduleChallenge recording.
    /// </summary>
    [TestModule("01216b5b-d27d-4c77-bae9-50ca661621c5", ModuleType.Recording, 1)]
    public partial class ScheduleChallenge : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static ScheduleChallenge instance = new ScheduleChallenge();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ScheduleChallenge()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ScheduleChallenge Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.Challenges' at 25;8.", repo.NewOceanAdminPortal.Package_Group.ChallengesInfo, new RecordItemIndex(0));
            repo.NewOceanAdminPortal.Package_Group.Challenges.Click("25;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.Challenges' at 25;8.", repo.NewOceanAdminPortal.Package_Group.ChallengesInfo, new RecordItemIndex(1));
            repo.NewOceanAdminPortal.Package_Group.Challenges.Click("25;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(2));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(4));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Content.Edit' at 70;11.", repo.NewOceanAdminPortal.Content.EditInfo, new RecordItemIndex(5));
            repo.NewOceanAdminPortal.Content.Edit.Click("70;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(6));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.TurnActive' at Center.", repo.NewOceanAdminPortal.Package_Group.TurnActiveInfo, new RecordItemIndex(7));
            repo.NewOceanAdminPortal.Package_Group.TurnActive.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.ScheduleTab' at 67;16.", repo.NewOceanAdminPortal.Package_Group.ScheduleTabInfo, new RecordItemIndex(8));
            repo.NewOceanAdminPortal.Package_Group.ScheduleTab.Click("67;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.ChallengeDate31st' at 73;10.", repo.NewOceanAdminPortal.Package_Group.ChallengeDate31stInfo, new RecordItemIndex(9));
            repo.NewOceanAdminPortal.Package_Group.ChallengeDate31st.Click("73;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.ButtonTagOk' at 16;14.", repo.NewOceanAdminPortal.Package_Group.ButtonTagOkInfo, new RecordItemIndex(10));
            repo.NewOceanAdminPortal.Package_Group.ButtonTagOk.Click("16;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.LeaderboardTab' at 50;19.", repo.NewOceanAdminPortal.Package_Group.LeaderboardTabInfo, new RecordItemIndex(11));
            repo.NewOceanAdminPortal.Package_Group.LeaderboardTab.Click("50;19");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Leaderboard will be visible once Challenge is Active') on item 'NewOceanAdminPortal.Package_Group.LeaderboardWillBeVisibleOnceChallen'.", repo.NewOceanAdminPortal.Package_Group.LeaderboardWillBeVisibleOnceChallenInfo, new RecordItemIndex(12));
            Validate.Attribute(repo.NewOceanAdminPortal.Package_Group.LeaderboardWillBeVisibleOnceChallenInfo, "InnerText", "Leaderboard will be visible once Challenge is Active");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Package_Group.EditChallengeCloseButton' at 27;16.", repo.NewOceanAdminPortal.Package_Group.EditChallengeCloseButtonInfo, new RecordItemIndex(13));
            repo.NewOceanAdminPortal.Package_Group.EditChallengeCloseButton.Click("27;16");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
