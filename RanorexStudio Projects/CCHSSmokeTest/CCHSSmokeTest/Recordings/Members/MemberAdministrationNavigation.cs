///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Members
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MemberAdministrationNavigation recording.
    /// </summary>
    [TestModule("e8a595d7-b07a-4a09-9921-c193adec0ad0", ModuleType.Recording, 1)]
    public partial class MemberAdministrationNavigation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static MemberAdministrationNavigation instance = new MemberAdministrationNavigation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MemberAdministrationNavigation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MemberAdministrationNavigation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.Programs' at 51;17.", repo.NewOceanAdminPortal.Content.ProgramsInfo, new RecordItemIndex(0));
                repo.NewOceanAdminPortal.Content.Programs.Click("51;17");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Member.FirstProgramOnMemberAdministration' at Center.", repo.NewOceanAdminPortal.Member.FirstProgramOnMemberAdministrationInfo, new RecordItemIndex(2));
                repo.NewOceanAdminPortal.Member.FirstProgramOnMemberAdministration.Click();
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 12s.", new RecordItemIndex(3));
            Delay.Duration(12000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.SomeDivTag.Information' at 24;7.", repo.NewOceanAdminPortal.SomeDivTag.InformationInfo, new RecordItemIndex(4));
                repo.NewOceanAdminPortal.SomeDivTag.Information.Click("24;7");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (InnerText>'\n            Focus:\n            ') on item 'NewOceanAdminPortal.DivTagFocus'.", repo.NewOceanAdminPortal.DivTagFocusInfo, new RecordItemIndex(5));
                Validate.Attribute(repo.NewOceanAdminPortal.DivTagFocusInfo, "InnerText", new Regex(Regex.Escape("\n            Focus:\n            ")), Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.SomeDivTag.Configuration' at 38;7.", repo.NewOceanAdminPortal.SomeDivTag.ConfigurationInfo, new RecordItemIndex(6));
                repo.NewOceanAdminPortal.SomeDivTag.Configuration.Click("38;7");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (InnerText>'\n            Type:\n            ') on item 'NewOceanAdminPortal.DivTagType'.", repo.NewOceanAdminPortal.DivTagTypeInfo, new RecordItemIndex(7));
                Validate.Attribute(repo.NewOceanAdminPortal.DivTagTypeInfo, "InnerText", new Regex(Regex.Escape("\n            Type:\n            ")), Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.SomeDivTag.Progress' at 26;8.", repo.NewOceanAdminPortal.SomeDivTag.ProgressInfo, new RecordItemIndex(8));
                repo.NewOceanAdminPortal.SomeDivTag.Progress.Click("26;8");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Name') on item 'NewOceanAdminPortal.Name'.", repo.NewOceanAdminPortal.NameInfo, new RecordItemIndex(9));
                Validate.Attribute(repo.NewOceanAdminPortal.NameInfo, "InnerText", "Name", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.Challenges' at 48;21.", repo.NewOceanAdminPortal.Content.ChallengesInfo, new RecordItemIndex(10));
                repo.NewOceanAdminPortal.Content.Challenges.Click("48;21");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Upcoming') on item 'NewOceanAdminPortal.Upcoming'.", repo.NewOceanAdminPortal.UpcomingInfo, new RecordItemIndex(11));
                Validate.Attribute(repo.NewOceanAdminPortal.UpcomingInfo, "InnerText", "Upcoming", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.Rewards' at 51;23.", repo.NewOceanAdminPortal.Content.RewardsInfo, new RecordItemIndex(12));
                repo.NewOceanAdminPortal.Content.Rewards.Click("51;23");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (InnerText>'Configurations') on item 'NewOceanAdminPortal.Content.AvailableRewards'.", repo.NewOceanAdminPortal.Content.AvailableRewardsInfo, new RecordItemIndex(13));
                Validate.Attribute(repo.NewOceanAdminPortal.Content.AvailableRewardsInfo, "InnerText", new Regex(Regex.Escape("Configurations")), Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.Activities' at 56;23.", repo.NewOceanAdminPortal.Content.ActivitiesInfo, new RecordItemIndex(14));
                repo.NewOceanAdminPortal.Content.Activities.Click("56;23");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (InnerText>'Active') on item 'NewOceanAdminPortal.Content.Name'.", repo.NewOceanAdminPortal.Content.NameInfo, new RecordItemIndex(15));
                Validate.Attribute(repo.NewOceanAdminPortal.Content.NameInfo, "InnerText", new Regex(Regex.Escape("Active")), Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.SupportTeam' at 56;19.", repo.NewOceanAdminPortal.Content.SupportTeamInfo, new RecordItemIndex(16));
                repo.NewOceanAdminPortal.Content.SupportTeam.Click("56;19");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='First Name') on item 'NewOceanAdminPortal.FirstName'.", repo.NewOceanAdminPortal.FirstNameInfo, new RecordItemIndex(17));
                Validate.Attribute(repo.NewOceanAdminPortal.FirstNameInfo, "InnerText", "First Name", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Content.Administration' at 48;18.", repo.NewOceanAdminPortal.Content.AdministrationInfo, new RecordItemIndex(18));
                repo.NewOceanAdminPortal.Content.Administration.Click("48;18");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText=' Activate Member') on item 'NewOceanAdminPortal.H5TagActivateMember'.", repo.NewOceanAdminPortal.H5TagActivateMemberInfo, new RecordItemIndex(19));
                Validate.Attribute(repo.NewOceanAdminPortal.H5TagActivateMemberInfo, "InnerText", " Activate Member", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Home.Home' at 24;8.", repo.NewOceanAdminPortal.Home.HomeInfo, new RecordItemIndex(20));
            repo.NewOceanAdminPortal.Home.Home.Click("24;8");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
