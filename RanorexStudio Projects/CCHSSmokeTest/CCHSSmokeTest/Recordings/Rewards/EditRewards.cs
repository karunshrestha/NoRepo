///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Rewards
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditRewards recording.
    /// </summary>
    [TestModule("b2a098aa-f6fc-4494-adc4-c94b72d3493c", ModuleType.Recording, 1)]
    public partial class EditRewards : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static EditRewards instance = new EditRewards();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditRewards()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditRewards Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'NewOceanAdminPortal.Condition.ButtonTagEdit' at 34;8.", repo.NewOceanAdminPortal.Condition.ButtonTagEditInfo, new RecordItemIndex(0));
                repo.NewOceanAdminPortal.Condition.ButtonTagEdit.Click("34;8");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(1));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Condition.FormControl' at 432;13.", repo.NewOceanAdminPortal.Condition.FormControlInfo, new RecordItemIndex(2));
            repo.NewOceanAdminPortal.Condition.FormControl.Click("432;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Return}' with focus on 'NewOceanAdminPortal.Condition.FormControl'.", repo.NewOceanAdminPortal.Condition.FormControlInfo, new RecordItemIndex(3));
            repo.NewOceanAdminPortal.Condition.FormControl.PressKeys("{Down}{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Condition.Text' at 41;19.", repo.NewOceanAdminPortal.Condition.TextInfo, new RecordItemIndex(4));
            repo.NewOceanAdminPortal.Condition.Text.Click("41;19");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}' with focus on 'NewOceanAdminPortal.Condition.Text'.", repo.NewOceanAdminPortal.Condition.TextInfo, new RecordItemIndex(5));
            repo.NewOceanAdminPortal.Condition.Text.PressKeys("{Back}{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '30' with focus on 'NewOceanAdminPortal.Condition.Text'.", repo.NewOceanAdminPortal.Condition.TextInfo, new RecordItemIndex(6));
            repo.NewOceanAdminPortal.Condition.Text.PressKeys("30");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Other.ModalClose' at 30;10.", repo.NewOceanAdminPortal.Other.ModalCloseInfo, new RecordItemIndex(7));
            repo.NewOceanAdminPortal.Other.ModalClose.Click("30;10");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
