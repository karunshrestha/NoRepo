///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Activities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditActivity recording.
    /// </summary>
    [TestModule("d27f6456-40af-4ddf-b349-7eece8ed38f9", ModuleType.Recording, 1)]
    public partial class EditActivity : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static EditActivity instance = new EditActivity();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditActivity()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditActivity Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.SystemComObject.ActiveNo' at 19;7.", repo.NewOceanAdminPortal.SystemComObject.ActiveNoInfo, new RecordItemIndex(0));
            repo.NewOceanAdminPortal.SystemComObject.ActiveNo.Click("19;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLarge' at 7;3.", repo.NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLargeInfo, new RecordItemIndex(1));
            repo.NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLarge.Click("7;3");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Activities.Globe_Text_Box_1_En' at 72;21.", repo.NewOceanAdminPortal.Activities.Globe_Text_Box_1_EnInfo, new RecordItemIndex(2));
            repo.NewOceanAdminPortal.Activities.Globe_Text_Box_1_En.Click("72;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '123' with focus on 'NewOceanAdminPortal.Activities.Globe_Text_Box_1_En'.", repo.NewOceanAdminPortal.Activities.Globe_Text_Box_1_EnInfo, new RecordItemIndex(3));
            repo.NewOceanAdminPortal.Activities.Globe_Text_Box_1_En.PressKeys("123");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLarge' at 6;5.", repo.NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLargeInfo, new RecordItemIndex(4));
            repo.NewOceanAdminPortal.SystemComObject.IconIconGlobeIconLarge.Click("6;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to 'activity_icon_bandage.png' on item 'NewOceanAdminPortal.Activities.ActivityIcon'.", repo.NewOceanAdminPortal.Activities.ActivityIconInfo, new RecordItemIndex(5));
            repo.NewOceanAdminPortal.Activities.ActivityIcon.Element.SetAttributeValue("TagValue", "activity_icon_bandage.png");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Member.Save' at 21;13.", repo.NewOceanAdminPortal.Member.SaveInfo, new RecordItemIndex(6));
            repo.NewOceanAdminPortal.Member.Save.Click("21;13");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'NewOceanAdminPortal.Validations.DivTagTheChangesHaveBeenSuccessfull'.", repo.NewOceanAdminPortal.Validations.DivTagTheChangesHaveBeenSuccessfullInfo, new RecordItemIndex(7));
                Validate.Exists(repo.NewOceanAdminPortal.Validations.DivTagTheChangesHaveBeenSuccessfullInfo, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(8));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
