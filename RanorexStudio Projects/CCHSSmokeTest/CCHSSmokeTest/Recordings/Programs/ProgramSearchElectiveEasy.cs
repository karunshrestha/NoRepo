///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CCHSSmokeTest.Recordings.Programs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ProgramSearchElectiveEasy recording.
    /// </summary>
    [TestModule("02597fdf-857c-49b7-a80e-fe9743f2f39c", ModuleType.Recording, 1)]
    public partial class ProgramSearchElectiveEasy : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CCHSSmokeTest.SmokeTestRepositoryKS repository.
        /// </summary>
        public static CCHSSmokeTest.SmokeTestRepositoryKS repo = CCHSSmokeTest.SmokeTestRepositoryKS.Instance;

        static ProgramSearchElectiveEasy instance = new ProgramSearchElectiveEasy();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ProgramSearchElectiveEasy()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ProgramSearchElectiveEasy Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to '2' on item 'NewOceanAdminPortal.Content.SelectProgramType'.", repo.NewOceanAdminPortal.Content.SelectProgramTypeInfo, new RecordItemIndex(0));
            repo.NewOceanAdminPortal.Content.SelectProgramType.Element.SetAttributeValue("TagValue", "2");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.SystemComObject.ClickProgramLevel' at 40;6.", repo.NewOceanAdminPortal.SystemComObject.ClickProgramLevelInfo, new RecordItemIndex(1));
            repo.NewOceanAdminPortal.SystemComObject.ClickProgramLevel.Click("40;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(2));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}'.", new RecordItemIndex(5));
            Keyboard.Press("{Down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(7));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Member.SearchButton' at Center.", repo.NewOceanAdminPortal.Member.SearchButtonInfo, new RecordItemIndex(8));
            repo.NewOceanAdminPortal.Member.SearchButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Elective') on item 'NewOceanAdminPortal.Content.Elective'.", repo.NewOceanAdminPortal.Content.ElectiveInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.NewOceanAdminPortal.Content.ElectiveInfo, "InnerText", "Elective");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Easy') on item 'NewOceanAdminPortal.Content.Easy'.", repo.NewOceanAdminPortal.Content.EasyInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.NewOceanAdminPortal.Content.EasyInfo, "InnerText", "Easy");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Users.New_Button' at 37;15.", repo.NewOceanAdminPortal.Users.New_ButtonInfo, new RecordItemIndex(11));
            repo.NewOceanAdminPortal.Users.New_Button.Click("37;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(12));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Sidebar.Programs' at 57;11.", repo.NewOceanAdminPortal.Sidebar.ProgramsInfo, new RecordItemIndex(13));
            repo.NewOceanAdminPortal.Sidebar.Programs.Click("57;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Other.Name' at 39;17.", repo.NewOceanAdminPortal.Other.NameInfo, new RecordItemIndex(14));
            repo.NewOceanAdminPortal.Other.Name.Click("39;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 't' with focus on 'NewOceanAdminPortal.Other.Name'.", repo.NewOceanAdminPortal.Other.NameInfo, new RecordItemIndex(15));
            repo.NewOceanAdminPortal.Other.Name.PressKeys("t");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewOceanAdminPortal.Member.SearchButton' at Center.", repo.NewOceanAdminPortal.Member.SearchButtonInfo, new RecordItemIndex(16));
            repo.NewOceanAdminPortal.Member.SearchButton.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
